import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';
import { Observable, UnaryFunction } from 'rxjs';
import { User, auth } from 'firebase/app';
import { AngularFireAuth } from '@angular/fire/auth';
import * as ɵngcc0 from '@angular/core';
export declare type AuthPipeGenerator = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => AuthPipe;
export declare type AuthPipe = UnaryFunction<Observable<User | null>, Observable<boolean | any[]>>;
export declare class AngularFireAuthGuard implements CanActivate {
    private afAuth;
    private router;
    constructor(afAuth: AngularFireAuth, router: Router);
    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AngularFireAuthGuard>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<AngularFireAuthGuard>;
}
export declare const canActivate: (pipe: UnaryFunction<Observable<User | null>, Observable<boolean | any[]>> | AuthPipeGenerator) => {
    canActivate: (typeof AngularFireAuthGuard)[];
    data: {
        authGuardPipe: UnaryFunction<Observable<User | null>, Observable<boolean | any[]>> | AuthPipeGenerator | (() => UnaryFunction<Observable<User | null>, Observable<boolean | any[]>> | AuthPipeGenerator);
    };
};
export declare const loggedIn: AuthPipe;
export declare const isNotAnonymous: AuthPipe;
export declare const idTokenResult: import("rxjs").OperatorFunction<User | null, auth.IdTokenResult | null>;
export declare const emailVerified: AuthPipe;
export declare const customClaims: UnaryFunction<Observable<User | null>, Observable<{
    [key: string]: any;
}>>;
export declare const hasCustomClaim: (claim: string) => UnaryFunction<Observable<User | null>, Observable<boolean>>;
export declare const redirectUnauthorizedTo: (redirect: any[]) => UnaryFunction<Observable<User | null>, Observable<true | any[]>>;
export declare const redirectLoggedInTo: (redirect: any[]) => UnaryFunction<Observable<User | null>, Observable<true | any[]>>;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC1ndWFyZC5kLnRzIiwic291cmNlcyI6WyJhdXRoLWd1YXJkLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBSUE7Ozs7Ozs7OztBQU9BIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FuQWN0aXZhdGUsIEFjdGl2YXRlZFJvdXRlU25hcHNob3QsIFJvdXRlclN0YXRlU25hcHNob3QsIFVybFRyZWUsIFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBVbmFyeUZ1bmN0aW9uIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBVc2VyLCBhdXRoIH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7IEFuZ3VsYXJGaXJlQXV0aCB9IGZyb20gJ0Bhbmd1bGFyL2ZpcmUvYXV0aCc7XG5leHBvcnQgZGVjbGFyZSB0eXBlIEF1dGhQaXBlR2VuZXJhdG9yID0gKG5leHQ6IEFjdGl2YXRlZFJvdXRlU25hcHNob3QsIHN0YXRlOiBSb3V0ZXJTdGF0ZVNuYXBzaG90KSA9PiBBdXRoUGlwZTtcbmV4cG9ydCBkZWNsYXJlIHR5cGUgQXV0aFBpcGUgPSBVbmFyeUZ1bmN0aW9uPE9ic2VydmFibGU8VXNlciB8IG51bGw+LCBPYnNlcnZhYmxlPGJvb2xlYW4gfCBhbnlbXT4+O1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQW5ndWxhckZpcmVBdXRoR3VhcmQgaW1wbGVtZW50cyBDYW5BY3RpdmF0ZSB7XG4gICAgcHJpdmF0ZSBhZkF1dGg7XG4gICAgcHJpdmF0ZSByb3V0ZXI7XG4gICAgY29uc3RydWN0b3IoYWZBdXRoOiBBbmd1bGFyRmlyZUF1dGgsIHJvdXRlcjogUm91dGVyKTtcbiAgICBjYW5BY3RpdmF0ZShuZXh0OiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90LCBzdGF0ZTogUm91dGVyU3RhdGVTbmFwc2hvdCk6IE9ic2VydmFibGU8Ym9vbGVhbiB8IFVybFRyZWU+O1xufVxuZXhwb3J0IGRlY2xhcmUgY29uc3QgY2FuQWN0aXZhdGU6IChwaXBlOiBVbmFyeUZ1bmN0aW9uPE9ic2VydmFibGU8VXNlciB8IG51bGw+LCBPYnNlcnZhYmxlPGJvb2xlYW4gfCBhbnlbXT4+IHwgQXV0aFBpcGVHZW5lcmF0b3IpID0+IHtcbiAgICBjYW5BY3RpdmF0ZTogKHR5cGVvZiBBbmd1bGFyRmlyZUF1dGhHdWFyZClbXTtcbiAgICBkYXRhOiB7XG4gICAgICAgIGF1dGhHdWFyZFBpcGU6IFVuYXJ5RnVuY3Rpb248T2JzZXJ2YWJsZTxVc2VyIHwgbnVsbD4sIE9ic2VydmFibGU8Ym9vbGVhbiB8IGFueVtdPj4gfCBBdXRoUGlwZUdlbmVyYXRvciB8ICgoKSA9PiBVbmFyeUZ1bmN0aW9uPE9ic2VydmFibGU8VXNlciB8IG51bGw+LCBPYnNlcnZhYmxlPGJvb2xlYW4gfCBhbnlbXT4+IHwgQXV0aFBpcGVHZW5lcmF0b3IpO1xuICAgIH07XG59O1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgbG9nZ2VkSW46IEF1dGhQaXBlO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgaXNOb3RBbm9ueW1vdXM6IEF1dGhQaXBlO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgaWRUb2tlblJlc3VsdDogaW1wb3J0KFwicnhqc1wiKS5PcGVyYXRvckZ1bmN0aW9uPFVzZXIgfCBudWxsLCBhdXRoLklkVG9rZW5SZXN1bHQgfCBudWxsPjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IGVtYWlsVmVyaWZpZWQ6IEF1dGhQaXBlO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgY3VzdG9tQ2xhaW1zOiBVbmFyeUZ1bmN0aW9uPE9ic2VydmFibGU8VXNlciB8IG51bGw+LCBPYnNlcnZhYmxlPHtcbiAgICBba2V5OiBzdHJpbmddOiBhbnk7XG59Pj47XG5leHBvcnQgZGVjbGFyZSBjb25zdCBoYXNDdXN0b21DbGFpbTogKGNsYWltOiBzdHJpbmcpID0+IFVuYXJ5RnVuY3Rpb248T2JzZXJ2YWJsZTxVc2VyIHwgbnVsbD4sIE9ic2VydmFibGU8Ym9vbGVhbj4+O1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgcmVkaXJlY3RVbmF1dGhvcml6ZWRUbzogKHJlZGlyZWN0OiBhbnlbXSkgPT4gVW5hcnlGdW5jdGlvbjxPYnNlcnZhYmxlPFVzZXIgfCBudWxsPiwgT2JzZXJ2YWJsZTx0cnVlIHwgYW55W10+PjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IHJlZGlyZWN0TG9nZ2VkSW5UbzogKHJlZGlyZWN0OiBhbnlbXSkgPT4gVW5hcnlGdW5jdGlvbjxPYnNlcnZhYmxlPFVzZXIgfCBudWxsPiwgT2JzZXJ2YWJsZTx0cnVlIHwgYW55W10+PjtcbiJdfQ==