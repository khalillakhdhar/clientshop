(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),exports, require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@angular/fire'), require('firebase/auth')) :
    typeof define === 'function' && define.amd ? define(['@angular/core','exports', '@angular/core', 'rxjs', 'rxjs/operators', '@angular/fire', 'firebase/auth'], factory) :
    (factory(global.ng.core,(global.angularfire2 = global.angularfire2 || {}, global.angularfire2.auth = {}),global.ng.core,global.rxjs,global.rxjs.operators,global.angularfire2));
}(this, (function (ɵngcc0,exports,core,rxjs,operators,fire) { 'use strict';

    var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = (undefined && undefined.__metadata) || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };
    var AngularFireAuth = (function () {
        function AngularFireAuth(options, nameOrConfig, platformId, zone) {
            var _this = this;
            var keepUnstableUntilFirst = fire.ɵkeepUnstableUntilFirstFactory(new fire.ɵAngularFireSchedulers(zone), platformId);
            this.auth = zone.runOutsideAngular(function () {
                var app = fire._firebaseAppFactory(options, zone, nameOrConfig);
                return app.auth();
            });
            this.authState = new rxjs.Observable(function (subscriber) {
                return zone.runOutsideAngular(function () { return _this.auth.onAuthStateChanged(subscriber); });
            }).pipe(keepUnstableUntilFirst);
            this.user = new rxjs.Observable(function (subscriber) {
                return zone.runOutsideAngular(function () { return _this.auth.onIdTokenChanged(subscriber); });
            }).pipe(keepUnstableUntilFirst);
            this.idToken = this.user.pipe(operators.switchMap(function (user) {
                return user ? rxjs.from(user.getIdToken()) : rxjs.of(null);
            }));
            this.idTokenResult = this.user.pipe(operators.switchMap(function (user) {
                return user ? rxjs.from(user.getIdTokenResult()) : rxjs.of(null);
            }));
        }
        AngularFireAuth = __decorate([ __param(0, core.Inject(fire.FIREBASE_OPTIONS)),
            __param(1, core.Optional()), __param(1, core.Inject(fire.FIREBASE_APP_NAME)),
            __param(2, core.Inject(core.PLATFORM_ID)),
            __metadata("design:paramtypes", [Object, Object, Object,
                core.NgZone])
        ], AngularFireAuth);
AngularFireAuth.ɵfac = function AngularFireAuth_Factory(t) { return new (t || AngularFireAuth)(ɵngcc0.ɵɵinject(fire.FIREBASE_OPTIONS), ɵngcc0.ɵɵinject(fire.FIREBASE_APP_NAME, 8), ɵngcc0.ɵɵinject(core.PLATFORM_ID), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };
AngularFireAuth.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: AngularFireAuth, factory: function (t) { return AngularFireAuth.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFireAuth, [{
        type: core.Injectable
    }], function () { return [{ type: Object, decorators: [{
                type: core.Inject,
                args: [fire.FIREBASE_OPTIONS]
            }] }, { type: Object, decorators: [{
                type: core.Optional
            }, {
                type: core.Inject,
                args: [fire.FIREBASE_APP_NAME]
            }] }, { type: Object, decorators: [{
                type: core.Inject,
                args: [core.PLATFORM_ID]
            }] }, { type: ɵngcc0.NgZone }]; }, null); })();
        return AngularFireAuth;
    }());

    var __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var AngularFireAuthModule = (function () {
        function AngularFireAuthModule() {
        }
AngularFireAuthModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AngularFireAuthModule });
AngularFireAuthModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AngularFireAuthModule_Factory(t) { return new (t || AngularFireAuthModule)(); }, providers: [AngularFireAuth] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFireAuthModule, [{
        type: core.NgModule,
        args: [{
                providers: [AngularFireAuth]
            }]
    }], function () { return []; }, null); })();
        return AngularFireAuthModule;
    }());

    exports.AngularFireAuth = AngularFireAuth;
    exports.AngularFireAuthModule = AngularFireAuthModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC51bWQuanMiLCJzb3VyY2VzIjpbImF1dGgudW1kLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO29HQUMyRTt5RUFDbEI7NEJBQzVDOzBCQUNNOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztzQ0FtQ21CLEFBRTNCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MkRBS2lCOzs7Ozs7Ozs7Ozs7U0FZbkI7Ozs7Ozs7O2dEQUt5QiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAoZ2xvYmFsLCBmYWN0b3J5KSB7XG4gICAgdHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnID8gZmFjdG9yeShleHBvcnRzLCByZXF1aXJlKCdAYW5ndWxhci9jb3JlJyksIHJlcXVpcmUoJ3J4anMnKSwgcmVxdWlyZSgncnhqcy9vcGVyYXRvcnMnKSwgcmVxdWlyZSgnQGFuZ3VsYXIvZmlyZScpLCByZXF1aXJlKCdmaXJlYmFzZS9hdXRoJykpIDpcbiAgICB0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQgPyBkZWZpbmUoWydleHBvcnRzJywgJ0Bhbmd1bGFyL2NvcmUnLCAncnhqcycsICdyeGpzL29wZXJhdG9ycycsICdAYW5ndWxhci9maXJlJywgJ2ZpcmViYXNlL2F1dGgnXSwgZmFjdG9yeSkgOlxuICAgIChmYWN0b3J5KChnbG9iYWwuYW5ndWxhcmZpcmUyID0gZ2xvYmFsLmFuZ3VsYXJmaXJlMiB8fCB7fSwgZ2xvYmFsLmFuZ3VsYXJmaXJlMi5hdXRoID0ge30pLGdsb2JhbC5uZy5jb3JlLGdsb2JhbC5yeGpzLGdsb2JhbC5yeGpzLm9wZXJhdG9ycyxnbG9iYWwuYW5ndWxhcmZpcmUyKSk7XG59KHRoaXMsIChmdW5jdGlvbiAoZXhwb3J0cyxjb3JlLHJ4anMsb3BlcmF0b3JzLGZpcmUpIHsgJ3VzZSBzdHJpY3QnO1xuXG4gICAgdmFyIF9fZGVjb3JhdGUgPSAodW5kZWZpbmVkICYmIHVuZGVmaW5lZC5fX2RlY29yYXRlKSB8fCBmdW5jdGlvbiAoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpIHtcbiAgICAgICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcbiAgICAgICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcbiAgICAgICAgZWxzZSBmb3IgKHZhciBpID0gZGVjb3JhdG9ycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgaWYgKGQgPSBkZWNvcmF0b3JzW2ldKSByID0gKGMgPCAzID8gZChyKSA6IGMgPiAzID8gZCh0YXJnZXQsIGtleSwgcikgOiBkKHRhcmdldCwga2V5KSkgfHwgcjtcbiAgICAgICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcbiAgICB9O1xuICAgIHZhciBfX21ldGFkYXRhID0gKHVuZGVmaW5lZCAmJiB1bmRlZmluZWQuX19tZXRhZGF0YSkgfHwgZnVuY3Rpb24gKGssIHYpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0Lm1ldGFkYXRhID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiBSZWZsZWN0Lm1ldGFkYXRhKGssIHYpO1xuICAgIH07XG4gICAgdmFyIF9fcGFyYW0gPSAodW5kZWZpbmVkICYmIHVuZGVmaW5lZC5fX3BhcmFtKSB8fCBmdW5jdGlvbiAocGFyYW1JbmRleCwgZGVjb3JhdG9yKSB7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAodGFyZ2V0LCBrZXkpIHsgZGVjb3JhdG9yKHRhcmdldCwga2V5LCBwYXJhbUluZGV4KTsgfVxuICAgIH07XG4gICAgdmFyIEFuZ3VsYXJGaXJlQXV0aCA9IChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZ1bmN0aW9uIEFuZ3VsYXJGaXJlQXV0aChvcHRpb25zLCBuYW1lT3JDb25maWcsIHBsYXRmb3JtSWQsIHpvbmUpIHtcbiAgICAgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgICAgICB2YXIga2VlcFVuc3RhYmxlVW50aWxGaXJzdCA9IGZpcmUuybVrZWVwVW5zdGFibGVVbnRpbEZpcnN0RmFjdG9yeShuZXcgZmlyZS7JtUFuZ3VsYXJGaXJlU2NoZWR1bGVycyh6b25lKSwgcGxhdGZvcm1JZCk7XG4gICAgICAgICAgICB0aGlzLmF1dGggPSB6b25lLnJ1bk91dHNpZGVBbmd1bGFyKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgYXBwID0gZmlyZS5fZmlyZWJhc2VBcHBGYWN0b3J5KG9wdGlvbnMsIHpvbmUsIG5hbWVPckNvbmZpZyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFwcC5hdXRoKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuYXV0aFN0YXRlID0gbmV3IHJ4anMuT2JzZXJ2YWJsZShmdW5jdGlvbiAoc3Vic2NyaWJlcikge1xuICAgICAgICAgICAgICAgIHJldHVybiB6b25lLnJ1bk91dHNpZGVBbmd1bGFyKGZ1bmN0aW9uICgpIHsgcmV0dXJuIF90aGlzLmF1dGgub25BdXRoU3RhdGVDaGFuZ2VkKHN1YnNjcmliZXIpOyB9KTtcbiAgICAgICAgICAgIH0pLnBpcGUoa2VlcFVuc3RhYmxlVW50aWxGaXJzdCk7XG4gICAgICAgICAgICB0aGlzLnVzZXIgPSBuZXcgcnhqcy5PYnNlcnZhYmxlKGZ1bmN0aW9uIChzdWJzY3JpYmVyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHpvbmUucnVuT3V0c2lkZUFuZ3VsYXIoZnVuY3Rpb24gKCkgeyByZXR1cm4gX3RoaXMuYXV0aC5vbklkVG9rZW5DaGFuZ2VkKHN1YnNjcmliZXIpOyB9KTtcbiAgICAgICAgICAgIH0pLnBpcGUoa2VlcFVuc3RhYmxlVW50aWxGaXJzdCk7XG4gICAgICAgICAgICB0aGlzLmlkVG9rZW4gPSB0aGlzLnVzZXIucGlwZShvcGVyYXRvcnMuc3dpdGNoTWFwKGZ1bmN0aW9uICh1c2VyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHVzZXIgPyByeGpzLmZyb20odXNlci5nZXRJZFRva2VuKCkpIDogcnhqcy5vZihudWxsKTtcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgIHRoaXMuaWRUb2tlblJlc3VsdCA9IHRoaXMudXNlci5waXBlKG9wZXJhdG9ycy5zd2l0Y2hNYXAoZnVuY3Rpb24gKHVzZXIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdXNlciA/IHJ4anMuZnJvbSh1c2VyLmdldElkVG9rZW5SZXN1bHQoKSkgOiByeGpzLm9mKG51bGwpO1xuICAgICAgICAgICAgfSkpO1xuICAgICAgICB9XG4gICAgICAgIEFuZ3VsYXJGaXJlQXV0aCA9IF9fZGVjb3JhdGUoW1xuICAgICAgICAgICAgY29yZS5JbmplY3RhYmxlKCksXG4gICAgICAgICAgICBfX3BhcmFtKDAsIGNvcmUuSW5qZWN0KGZpcmUuRklSRUJBU0VfT1BUSU9OUykpLFxuICAgICAgICAgICAgX19wYXJhbSgxLCBjb3JlLk9wdGlvbmFsKCkpLCBfX3BhcmFtKDEsIGNvcmUuSW5qZWN0KGZpcmUuRklSRUJBU0VfQVBQX05BTUUpKSxcbiAgICAgICAgICAgIF9fcGFyYW0oMiwgY29yZS5JbmplY3QoY29yZS5QTEFURk9STV9JRCkpLFxuICAgICAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtPYmplY3QsIE9iamVjdCwgT2JqZWN0LFxuICAgICAgICAgICAgICAgIGNvcmUuTmdab25lXSlcbiAgICAgICAgXSwgQW5ndWxhckZpcmVBdXRoKTtcbiAgICAgICAgcmV0dXJuIEFuZ3VsYXJGaXJlQXV0aDtcbiAgICB9KCkpO1xuXG4gICAgdmFyIF9fZGVjb3JhdGUkMSA9ICh1bmRlZmluZWQgJiYgdW5kZWZpbmVkLl9fZGVjb3JhdGUpIHx8IGZ1bmN0aW9uIChkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xuICAgICAgICB2YXIgYyA9IGFyZ3VtZW50cy5sZW5ndGgsIHIgPSBjIDwgMyA/IHRhcmdldCA6IGRlc2MgPT09IG51bGwgPyBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkgOiBkZXNjLCBkO1xuICAgICAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xuICAgICAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xuICAgICAgICByZXR1cm4gYyA+IDMgJiYgciAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHIpLCByO1xuICAgIH07XG4gICAgdmFyIEFuZ3VsYXJGaXJlQXV0aE1vZHVsZSA9IChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZ1bmN0aW9uIEFuZ3VsYXJGaXJlQXV0aE1vZHVsZSgpIHtcbiAgICAgICAgfVxuICAgICAgICBBbmd1bGFyRmlyZUF1dGhNb2R1bGUgPSBfX2RlY29yYXRlJDEoW1xuICAgICAgICAgICAgY29yZS5OZ01vZHVsZSh7XG4gICAgICAgICAgICAgICAgcHJvdmlkZXJzOiBbQW5ndWxhckZpcmVBdXRoXVxuICAgICAgICAgICAgfSlcbiAgICAgICAgXSwgQW5ndWxhckZpcmVBdXRoTW9kdWxlKTtcbiAgICAgICAgcmV0dXJuIEFuZ3VsYXJGaXJlQXV0aE1vZHVsZTtcbiAgICB9KCkpO1xuXG4gICAgZXhwb3J0cy5Bbmd1bGFyRmlyZUF1dGggPSBBbmd1bGFyRmlyZUF1dGg7XG4gICAgZXhwb3J0cy5Bbmd1bGFyRmlyZUF1dGhNb2R1bGUgPSBBbmd1bGFyRmlyZUF1dGhNb2R1bGU7XG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG59KSkpO1xuIl19